@mixin microfix {

    &:before, &:after {
        content: '';
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        content: "";
        display: block;
        width: 100%;
        padding-top:($height / $width) * 100%;
        opacity: 0;
    }

    .aspect-ratio {
        @include bg-cover;
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        right: 0;
    }
}

@mixin bg-cover($bg-image: null, $bg-position: null) {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;

    @if $bg-image {
        background-image: url($bg-image);
    }

    @if $bg-position {
        background-position: $bg-position;
    }
}

@mixin bg-cover($bg-image: null, $bg-position: null) {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;

    @if $bg-image {
        background-image: url($bg-image);
    }

    @if $bg-position {
        background-position: $bg-position;
    }

}

@mixin position-center($orientation: null) {
    position: absolute;

    @if($orientation == 'horizontal') {
        left: 50%;
        transform: translateX(-50%);
    } @else if($orientation == 'vertical') {
        top: 50%;
        transform: translateY(-50%);
    } @else {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}

@mixin triangle($size, $direction, $color) {
    content: '';
    width: 0;
    height: 0;
    display: block;
    position: absolute;

    @if($direction == 'up') {
        border-left:  $size solid transparent;
        border-right:  $size solid transparent;
        border-bottom: $size solid $color;

    } @else if($direction == 'down') {
        border-left:  $size solid transparent;
        border-right:  $size solid transparent;
        border-top: $size solid $color;

    } @else if($direction == 'left') {
        border-top:  $size solid transparent;
        border-bottom:  $size solid transparent;
        border-right: $size solid $color;

    } @else if($direction == 'right') {
        border-top:  $size solid transparent;
        border-bottom:  $size solid transparent;
        border-left: $size solid $color;
    }
}

@mixin ellipsis($truncation-boundary : 100%) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin brackets($position: null, $offset-left: -1px, $offset-top: -1px, $offset-right: -1px, $offset-bottom: -1px) {

    &:before,
    &:after {
        content: '';
        border: 1px solid $dark-gray;
        position: absolute;
        width: 8px;
        height: 8px;
    }

    &:before {
        left: $offset-left;
    }

    &:after {
        right: $offset-right;
    }

    @if($position == 'top') {

        &:before,
        &:after {
            top: $offset-top;
        }

        &:before {
            border-width: 1px 0 0 1px;
        }

        &:after {
            border-width: 1px 1px 0 0;
        }

    } @else if($position == 'bottom') {

        &:before,
        &:after {
            bottom: $offset-bottom;
        }

        &:before {
            border-width: 0 0 1px 1px;
        }

        &:after {
            border-width: 0 1px 1px 0;
        }
    }
}



// -- media queries -- //
@mixin width-under($width) {
    @media only screen and(max-width: $width) { @content; }
}

@mixin width-over($width) {
    @media only screen and(min-width: $width) { @content; }
}

@mixin width-between($low, $high) {
    @if($high < $low) {
        $temp : $high;
        $high : $low;
        $low : $temp;
    }
    @media only screen and(min-width: $low) and(max-width: $high) { @content; }
}

@mixin height-under($height) {
    @media only screen and(max-height: $height) { @content; }
}

@mixin height-over($height) {
    @media only screen and(min-height: $height) { @content; }
}

@mixin height-between($low, $high) {
    @if($high < $low) {
        $temp : $high;
        $high : $low;
        $low : $temp;
    }
    @media only screen and(min-height: $low) and(max-height: $high) { @content; }
}


// -- easings -- //
$ease-in-quad:      cubic-bezier(0.550, 0.085, 0.680, 0.530);
$ease-out-quad:     cubic-bezier(0.250, 0.460, 0.450, 0.940);
$ease-in-out-quad:  cubic-bezier(0.455, 0.030, 0.515, 0.955);

$ease-in-cubic:     cubic-bezier(0.550, 0.055, 0.675, 0.190);
$ease-out-cubic:    cubic-bezier(0.215, 0.610, 0.355, 1.000);
$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1.000);

$ease-in-quart:     cubic-bezier(0.895, 0.030, 0.685, 0.220);
$ease-out-quart:    cubic-bezier(0.165, 0.840, 0.440, 1.000);
$ease-in-out-quart: cubic-bezier(0.770, 0.000, 0.175, 1.000);

$ease-in-quint:     cubic-bezier(0.755, 0.050, 0.855, 0.060);
$ease-out-quint:    cubic-bezier(0.230, 1.000, 0.320, 1.000);
$ease-in-out-quint: cubic-bezier(0.860, 0.000, 0.070, 1.000);

$ease-in-sine:      cubic-bezier(0.470, 0.000, 0.745, 0.715);
$ease-out-sine:     cubic-bezier(0.390, 0.575, 0.565, 1.000);
$ease-in-out-sine:  cubic-bezier(0.445, 0.050, 0.550, 0.950);

$ease-in-expo:      cubic-bezier(0.950, 0.050, 0.795, 0.035);
$ease-out-expo:     cubic-bezier(0.190, 1.000, 0.220, 1.000);
$ease-in-out-expo:  cubic-bezier(1.000, 0.000, 0.000, 1.000);

$ease-in-circ:      cubic-bezier(0.600, 0.040, 0.980, 0.335);
$ease-out-circ:     cubic-bezier(0.075, 0.820, 0.165, 1.000);
$ease-in-out-circ:  cubic-bezier(0.785, 0.135, 0.150, 0.860);


@mixin border-box-sizing() {
   -moz-box-sizing:    border-box;
   -webkit-box-sizing: border-box;
    box-sizing:        border-box;
}

@mixin border-radius($radius-top, $radius-right, $radius-bottom,$radius-left){
   $top:$radius-top;
   $right:$radius-right;
   $bottom:$radius-bottom;
   $left:$radius-left;
   -moz-border-radius: $top $right $bottom $left;
   border-radius: $top $right $bottom $left;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin rotate( $val: -2deg ) {
  -webkit-transform: rotate($val);
  -moz-transform: rotate($val);
  -ms-transform: rotate($val);
  -o-transform: rotate($val);
  transform: rotate($val);
}

@mixin gradient($from, $to) {
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background: -moz-linear-gradient(top,  $from, $to);
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

@mixin text-box() {
    display: inline-block;
    vertical-align: bottom;
    font-weight: bold;
    padding: .22em;
    font-size: .6em;
    border: 1px black solid;
}

@mixin super-script ($content) {
    position: relative;
    margin-left: 0.3em;
    &:after {
        content: $content;
        position: absolute;
        top: .2em;
        font-size: 0.6em;
    }
}

@mixin dollar-amount {
    @include super-script('$');
    &:after {
        right: 100%;
    }
}

.dollar-amount {
    @include dollar-amount;
}

@mixin vert-align-parent($align: middle, $margin: 0.25em) {
    &:before {
        display: inline-block;
        height: 100%;
        vertical-align: $align;
        margin-right: -$margin;
        content: "";
    }
}

@mixin vert-align-child($align: middle) {
    display: inline-block;
    vertical-align: $align;
}

